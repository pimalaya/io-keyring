[package]
name = "keyring-lib"
description = "Cross-platform, sans I/O library to manage credentials"
version = "2.0.0"
authors = ["soywod <clement.douin@posteo.net>"]
edition = "2021"
license = "MIT"
categories = ["asynchronous"]
keywords = ["password", "credential", "keychain", "keyring", "secret"]
homepage = "https://pimalaya.org/"
documentation = "https://docs.rs/keyring-lib/latest/keyring/"
repository = "https://github.com/pimalaya/keyring/"

[package.metadata.docs.rs]
features = []
rustdoc-args = ["--cfg", "docsrs"]

[lib]
name = "keyring"

[features]
default = []
full = [
  "apple-keychain-std",
  "windows-credentials-std",

  "secret-service-dbus-std",
  "secret-service-dbus-tokio",

  "secret-service-zbus-std",
  "secret-service-zbus-async-std",
  "secret-service-zbus-tokio",

  "secret-service-openssl-std",
  "secret-service-rust-crypto-std",
]

# Linux Secret service
#
secret-service = []

# Linux Secret service,
# D-Bus implementation (requires libdbus)
#
secret-service-dbus = ["dep:dbus", "secret-service"]
secret-service-dbus-blocking = ["dep:dbus-codegen", "secret-service-dbus"]
secret-service-dbus-nonblock = ["dep:dbus-codegen", "dbus/futures", "secret-service-dbus"]
secret-service-dbus-std = ["secret-service-dbus-blocking"]
secret-service-dbus-tokio = ["dep:dbus-tokio", "dep:tokio", "secret-service-dbus-nonblock"]

# Linux Secret service,
# Z-Bus implementation (pure Rust)
#
secret-service-zbus = ["dep:serde", "dep:zbus", "serde?/derive", "secret-service"]
secret-service-zbus-std = ["zbus?/blocking-api", "secret-service-zbus"]
secret-service-zbus-async-std = ["dep:async-std", "secret-service-zbus"]
secret-service-zbus-tokio = ["dep:tokio", "secret-service-zbus"]

# Linux Secret service,
# Crypto provider (for encrypted sessions)
#
secret-service-crypto = ["dep:num", "dep:once_cell", "dep:rand"]
secret-service-openssl-std = ["dep:openssl", "secret-service-crypto"]
secret-service-rust-crypto-std = ["dep:aes", "dep:block-padding", "dep:cbc", "dep:hkdf", "dep:sha2", "secret-service-crypto"]

# MacOS/iOS Keychain
#
apple-keychain = []
apple-keychain-std = ["dep:security-framework", "apple-keychain"]

# Windows Credentials
#
windows-credentials = []
windows-credentials-std = ["dep:byteorder", "dep:windows-sys", "windows-credentials"]

# Vendored
#
vendored = ["dbus?/vendored", "openssl?/vendored"]

[dev-dependencies]
async-std = { version = "1", features = ["attributes"] }
tokio = { version = "1", features = ["full"] }

[build-dependencies]
dbus-codegen = { version = "0.12", default-features = false, optional = true }

[dependencies]
aes = { version = "0.8", optional = true }
async-std = { version = "1", optional = true }
block-padding = { version = "0.3", features = ["std"], optional = true }
byteorder = { version = "1.2", optional = true }
cbc = { version = "0.1", features = ["block-padding", "alloc"], optional = true }
dbus = { version = "0.9", optional = true }
dbus-tokio = { version = "0.7", optional = true }
hkdf = { version = "0.12", features = ["std"], optional = true }
num = { version = "0.4", optional = true }
once_cell = { version = "1", optional = true }
openssl = { version = "0.10", optional = true }
rand = { version = "0.8", optional = true }
secrecy = "0.10"
security-framework = { version = "3", default-features = false, optional = true }
serde = { version = "1", optional = true }
sha2 = { version = "0.10", optional = true }
thiserror = "2"
tokio = { version = "1", features = ["rt"], optional = true }
tracing = "0.1"
windows-sys = { version = "0.59", features = ["Win32_Foundation", "Win32_Security_Credentials"], optional = true }
zbus = { version = "5", default-features = false, features = ["async-io"], optional = true }
